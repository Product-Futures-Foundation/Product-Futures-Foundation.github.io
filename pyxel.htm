<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">

<head>
  <title>pyxel</title>
  <link href=".src/preferred.css" rel="stylesheet" type="text/css"/>
</head>

<body>
<p class='header'>
 <a href="-home.htm">Home</a> | <a href="-diary.htm">Diary</a> | <a href="-todo.htm">Todo</a> | <a href="-index.htm">Index</a> | <a href="-about.htm">About</a> |</p>
<p class='main'><a class="ext" href="http://tkitao.hatenablog.com/entry/2019/09/22/001541">http://tkitao.hatenablog.com/entry/2019/09/22/001541</a><br/>
<br/>
kitao's blog<br/>
<br/>
2019-09-22<br/>
Let's doodle with<a href="py.htm"> Py</a>thon <small>(Introduction of <a href="new.htm">new</a> commands of<a href="py.htm"> Py</a>xel)</small><br/>
<a href="creat.htm">Creat</a>ive Coding<a href="py.htm"> Py</a>thon<a href="py.htm"> Py</a>xel<br/>
This article is the English version of the previous <a href="post.htm">post</a>.<br/>
<br/>
Have you ever wanted to <a href="creat.htm">creat</a>e a little drawing or animation in<a href="py.htm"> Py</a>thon?<br/>
<br/>
In the<a href="py.htm"> Py</a>xel, a retro <a href="game.htm">game</a> engine for<a href="py.htm"> Py</a>thon, <a href="new.htm">new</a> commands to draw easily has <a href="bee.htm">bee</a>n added since version 1.2.<br/>
<br/>
By using the <a href="new.htm">new</a> commands, you can <a href="creat.htm">creat</a>e the following image with about 10 lines of<a href="py.htm"> Py</a>thon <a href="code.htm">code</a>.<br/>
<br/>
f:id:tkitao:20190903003152g:plain<br/>
<br/>
In this article, I would like to introduce how to use <a href="new.htm">new</a> drawing commands and examples of <a href="creat.htm">creat</a>ive coding using them.<br/>
<br/>
About<a href="py.htm"> Py</a>xel 1.2<br/>
<a href="py.htm">Py</a>xel is a <a href="game.htm">game</a> engine for easily <a href="creat.htm">creat</a>ing pixel-art-type retro <a href="game.htm">game</a>s in<a href="py.htm"> Py</a>thon.<br/>
<br/>
Features of<a href="py.htm"> Py</a>xel and its detailed usage in<a href="struc.htm">struc</a>tions are descri<a href="bed.htm">bed</a> in the manual, but if you would like to use it q<a href="ui.htm">ui</a>ckly, enter the following command.<br/>
<br/>
<small>[Windows]</small><br/>
<br/>
In the environment where<a href="py.htm"> Py</a>thon is installed:<br/>
<br/>
pip install<a href="py.htm"> py</a>xel<br/>
<small>[Mac]</small><br/>
<br/>
In the environment where <a href="home.htm">Home</a>brew is installed:<br/>
<br/>
brew install<a href="py.htm"> py</a>thon3 sdl2 sdl2_image<br/>
pip3 install<a href="py.htm"> py</a>xel<br/>
<a href="py.htm">Py</a>xel has <a href="bee.htm">bee</a>n upgraded since the first official release on July 30, 2018. In the version 1.2 released last month <small>(August 2019)</small>, show and flip, the commands enable to draw graphics q<a href="ui.htm">ui</a>ckly in<a href="py.htm"> Py</a>thon, and the<a href="py.htm"> Py</a>xel Packager <a href="tool.htm">tool</a>, <a href="mak.htm">mak</a>es stand-alone program which can be executed without<a href="py.htm"> Py</a>thon, are added.<br/>
<br/>
About show and flip commands<br/>
The show and flip commands<a href="we.htm"> we</a>re added for the purpose of <a href="mak.htm">mak</a>ing it easy to <a href="creat.htm">creat</a>e animations and inter<a href="act.htm">act</a>ive art <a href="work.htm">work</a>s <small>(<a href="creat.htm">creat</a>ive coding)</small> with<a href="py.htm"> Py</a>thon +<a href="py.htm"> Py</a>xel, and to <a href="post.htm">post</a> them on Twitter.<br/>
<br/>
show is a command that waits until the ESC key is pressed after drawing the screen, and is used to <a href="creat.htm">creat</a>e a still image.<br/>
<br/>
For example, if you'd like to <a href="creat.htm">creat</a>e a bar chart image,<br/>
<br/>
import<a href="py.htm"> py</a>xel<br/>
<br/>
data = <small>[40, 70, 50, 20, 100, 50, 40, 20]</small>&nbsp;&nbsp;# data for a bar chart<br/>
<br/>
<a class="ext" href="https://pyxel.init(128">pyxel.init(128</a>, 128)</small>&nbsp;&nbsp;# <a href="creat.htm">creat</a>e the screen as 128x128 size<br/>
<br/>
for i, d in enumerate<small>(data)</small>:<br/>
&nbsp;&nbsp;&nbsp; # draw a rectangle with diffe<a href="rent.htm">rent</a> height while <a href="chang.htm">chang</a>ing color<br/>
&nbsp;&nbsp;&nbsp;<a href="py.htm"> py</a><a class="ext" href="https://xel.rect(i">xel.rect(i</a> * 14 + 10, 120 - d, 10, d, 8 + i)</small><a href="py.htm"> 

py</a><a class="ext" href="https://xel.line(0">xel.line(0</a>, 120, 127, 120, 7)</small>&nbsp;&nbsp;# draw a line below the bar chart<br/>
<br/>
<a class="ext" href="https://pyxel.show(">pyxel.show(</a>)</small>&nbsp;&nbsp;# show the screen<br/>
by writing the above<a href="py.htm"> Py</a>thon <a href="code.htm">code</a>, the following screen will be dis<a href="play.htm">play</a>ed:<br/>
<br/>
f:id:tkitao:20190901231534p:plain<br/>
<br/>
flip is a command to continue processing after drawing the screen once and is used to <a href="creat.htm">creat</a>e animation.<br/>
<br/>
For example, if the animation is a ball moving around the screen,<br/>
<br/>
import<a href="py.htm"> py</a>xel<br/>
<br/>
x = y = 30&nbsp;&nbsp;# the position of the ball<br/>
v = w = 3&nbsp;&nbsp;# the speed of the ball<br/>
<br/>
<a class="ext" href="https://pyxel.init(160">pyxel.init(160</a>, 120)</small>&nbsp;&nbsp;# <a href="creat.htm">creat</a>e the screen as 160x120 size<br/>
<br/>
while True:<br/>
&nbsp;&nbsp;&nbsp;<a href="py.htm"> py</a><a class="ext" href="https://xel.cls(1">xel.cls(1</a>)</small>&nbsp;&nbsp;# erase the screen with color number 1 <small>(blue)</small><br/>
<br/>
&nbsp;&nbsp;&nbsp; # process the movement of the ball<br/>
&nbsp;&nbsp;&nbsp; x += v<br/>
&nbsp;&nbsp;&nbsp; y += w<br/>
<br/>
&nbsp;&nbsp;&nbsp; if x &lt;= 7 or x >= 152:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = min<small>(max<small>(x, 7)</small>, 152)</small><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v = -v<br/>
<br/>
&nbsp;&nbsp;&nbsp; if y &lt;= 7 or y >= 112:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y = min<small>(max<small>(y, 7)</small>, 112)</small><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; w = -w<br/>
<br/>
&nbsp;&nbsp;&nbsp;<a href="py.htm"> py</a><a class="ext" href="https://xel.circ(x">xel.circ(x</a>, y, 7,<a href="py.htm"> py</a><a class="ext" href="https://xel.frame_count">xel.frame_count</a> % 16)</small>&nbsp;&nbsp;# draw the ball with diffe<a href="rent.htm">rent</a> colors<br/>
<br/>
&nbsp;&nbsp;&nbsp;<a href="py.htm"> py</a><a class="ext" href="https://xel.flip(">xel.flip(</a>)</small>&nbsp;&nbsp;# draw the screen<br/>
by writing the above<a href="py.htm"> Py</a>thon <a href="code.htm">code</a>, you can <a href="creat.htm">creat</a>e the following animation:<br/>
<br/>
f:id:tkitao:20190901233703g:plain<br/>
<br/>
How to save images and animations<br/>
<a href="creat.htm">Creat</a>ed images and animations can be saved as image files using<a href="py.htm"> Py</a>xel's screenshot saving <a href="fun.htm">fun</a>ction.<br/>
<br/>
If it is a still image <small>(screenshot)</small>, press ALT + 1 <small>(or OPTION + 1 for Mac)</small> to save the PNG file on the desktop.<br/>
<br/>
If it's a movie, ALT + 3 <small>(OPTION + 3 for Mac)</small> saves the latest animation of up to 30 s<a href="econ.htm">econ</a>ds on the desktop as a GIF file.<br/>
<br/>
If you want to <a href="chang.htm">chang</a>e the recording start timing, you can also specify it with ALT + 2.<br/>
<br/>
If you want to distribute an inter<a href="act.htm">act</a>ive program with key operations, enter this command:<br/>
<br/>
<a href="py.htm">py</a>xelpackager target-<a href="py.htm">Py</a>thon-file-name<br/>
Then, a file that can be executed by itself without installing<a href="py.htm"> Py</a>thon or<a href="py.htm"> Py</a>xel will be <a href="creat.htm">creat</a>ed under the dist folder.<br/>
<br/>
Try short coding<br/>
You can <a href="post.htm">post</a> your <a href="code.htm">code</a> directly to Twitter by shortening the<a href="py.htm"> Py</a>thon <a href="code.htm">code</a> and clearing the Twitter char<a href="act.htm">act</a>er limit <small>(280 letters)</small>.<br/>
<br/>
For example, with a short alias like this:<br/>
<br/>
import<a href="py.htm"> py</a>xel as p<br/>
The following t<a href="we.htm">we</a>et, the shorten bar graph <a href="code.htm">code</a>, can be made:<br/>
<br/>
<br/>
Takashi Kitao<br/>
@kitao<br/>
Why don't you draw a graph with<a href="py.htm"> Py</a>xel?<br/>
<a href="py.htm">Py</a>xelでグラフ描画 #<a href="py.htm">py</a>thon<br/>
<br/>
import<a href="py.htm"> py</a>xel as p<br/>
data = <small>[40,70,50,20,100,50,40,20]</small><br/>
<a class="ext" href="https://p.init(128">p.init(128</a>,128)</small><br/>
for i,d in enumerate<small>(data)</small>:<br/>
&nbsp;<a class="ext" href="https://p.rect(i*14+10">p.rect(i*14+10</a>,120-d,10,d,8+i)</small><br/>
<a class="ext" href="https://p.line(0">p.line(0</a>,120,127,120,7)</small><a class="ext" href="http://p.show">http://p.show</a> <small>()</small><br/>
<br/>
Twitterで画像を見る<br/>
7<br/>
16:08 - 2019年7月23日<br/>
Twitter広告の情報とプライバシー<br/>
Takashi Kitaoさんの他のツイートを見る<br/>
I'm not very familiar with it, but I think it's possible to expand the possibilities by applying various<a href="py.htm"> Py</a>thon one-liner techniques.<br/>
<br/>
Try <a href="creat.htm">creat</a>ive coding with<a href="py.htm"> Py</a>xel<br/>
Based on the contents so far, I will challenge <a href="creat.htm">creat</a>ive coding with a length that can be t<a href="we.htm">we</a>eted on Twitter.<br/>
<br/>
I made a<a href="py.htm"> Py</a>thon <a href="code.htm">code</a> like this:<br/>
<br/>
from math import sin, sqrt<br/>
from<a href="py.htm"> py</a>xel import circ, cls, flip, init<br/>
<br/>
a=0<br/>
init<small>(128,128)</small><br/>
while 1:<br/>
&nbsp;cls<small>(1)</small><br/>
&nbsp;for x in range<small>(0,128,4)</small>:<br/>
&nbsp; for y in range<small>(0,128,4)</small>:<br/>
&nbsp;&nbsp;&nbsp;d=sqrt<small>(<small>(x-64)</small>**2+<small>(y-64)</small>**2)</small><br/>
&nbsp;&nbsp;&nbsp;b=sin<small>(d*0.2+a)</small>*4<br/>
&nbsp;&nbsp;&nbsp;c=<small>(15-d*0.2)</small>%16<br/>
&nbsp;&nbsp;&nbsp;circ<small>(x+b,y+sin<small>(b/4)</small>*4,1,c)</small><br/>
&nbsp;a+=0.2<br/>
&nbsp;flip<small>()</small><br/>
I noticed that the<a href="py.htm"> Py</a>thon import sentence is long. So I secretly omitted the description of the import <a href="state.htm">state</a>ment.<br/>
<br/>
Here are the results for Twitter:<br/>
<br/>
<br/>
Takashi Kitao<br/>
@kitao<br/>
a=0<br/>
init<small>(128,128)</small><br/>
while 1:<br/>
&nbsp;cls<small>(1)</small><br/>
&nbsp;for x in range<small>(0,128,4)</small>:<br/>
&nbsp; for y in range<small>(0,128,4)</small>:<br/>
&nbsp;&nbsp;&nbsp;d=sqrt<small>(<small>(x-64)</small>**2+<small>(y-64)</small>**2)</small><br/>
&nbsp;&nbsp;&nbsp;b=sin<small>(d*0.2+a)</small>*4<br/>
&nbsp;&nbsp;&nbsp;c=<small>(15-d*0.2)</small>%16<br/>
&nbsp;&nbsp;&nbsp;circ<small>(x+b,y+sin<small>(b/4)</small>*4,1,c)</small><br/>
&nbsp;a+=0.2<br/>
&nbsp;flip<small>()</small>#<a href="py.htm">py</a>thon #<a href="py.htm">py</a>xel #shortcoding<br/>
<br/>
埋め込み動画<br/>
42<br/>
7:31 - 2019年9月2日<br/>
Twitter広告の情報とプライバシー<br/>
16人がこの話題について話しています<br/>
Why don't you try <a href="creat.htm">creat</a>ive coding and short coding with<a href="py.htm"> Py</a>xel?<br/>
<br/>
tkitao 129日前<br/>
<br/>
&nbsp;<br/>
&nbsp;<br/>
<br/>
関連記事<br/>
<a href="py.htm">Py</a>thonでお絵描きしてみよう <small>(<a href="py.htm">Py</a>xelの新命令の紹介)</small><br/>
2019-09-03<br/>
<a href="py.htm">Py</a>thonでお絵描きしてみよう <small>(<a href="py.htm">Py</a>xelの新命令の紹介)</small><br/>
<a href="py.htm">Py</a>thonでちょっとしたお絵描きやアニメーションを作成したいと…<br/>
<a href="py.htm">Py</a>xel 1.0 から 1.1 への移行方法<br/>
2019-07-13<br/>
<a href="py.htm">Py</a>xel 1.0 から 1.1 への移行方法<br/>
久々の更新。<a href="py.htm"> Py</a>xel向けレトロゲームエンジン<a href="py.htm">Py</a>xelを昨年にリリ…<br/>
<a href="py.htm">Py</a>xel 紹介記事まとめ<br/>
2019-02-11<br/>
<a href="py.htm">Py</a>xel 紹介記事まとめ<br/>
仕事が立て込んでいたため、すっかり更新の間が空いてしまいま…<br/>
2018-11-25<br/>
Let's start programming with<a href="py.htm"> Py</a>xel, a retro <a href="game.htm">game</a> e…<br/>
NOTE: This article is English translated version of introdu…<br/>
2018-11-24<br/>
レトロゲームエンジン<a href="py.htm"> Py</a>xel でプログラミングを始めよう！<br/>
<a href="py.htm">Py</a>xelの開発が一区切りしたので、改めて紹介記事を書いてみまし…<br/>
<a href="py.htm">Py</a>thonでお絵描きしてみよう <small>(<a href="py.htm">Py</a>xelの新命… »<br/>
プロフィール<br/>
id:tkitao<br/>
id:tkitao<br/>
読者になる139<br/>
検索<br/>
記事を検索<br/>
&nbsp;<br/>
リンク<br/>
はてなブログ<br/>
ブログをはじめる<br/>
週刊はてなブログ<br/>
はてなブログPro<br/>
最新記事<br/>
Let's doodle with<a href="py.htm"> Py</a>thon <small>(Introduction of <a href="new.htm">new</a> commands of<a href="py.htm"> Py</a>xel)</small><br/>
<a href="py.htm">Py</a>thonでお絵描きしてみよう <small>(<a href="py.htm">Py</a>xelの新命令の紹介)</small><br/>
<a href="py.htm">Py</a>xel 1.0 から 1.1 への移行方法<br/>
<a href="py.htm">Py</a>xel 紹介記事まとめ<br/>
Let's start programming with<a href="py.htm"> Py</a>xel, a retro <a href="game.htm">game</a> engine!<br/>
月別アーカイブ<br/>
▼ 2019 <small>(4)</small><br/>
2019 / 9 <small>(2)</small><br/>
2019 / 7 <small>(1)</small><br/>
2019 / 2 <small>(1)</small><br/>
▶ 2018 <small>(5)</small><br/>
▶ 2017 <small>(10)</small><br/>
▶ 2016 <small>(19)</small><br/>
▶ 2015 <small>(16)</small><br/>
▶ 2014 <small>(30)</small><br/>
はてなブログをはじめよう！<br/>
tkitaoさんは、はてなブログを使っています。あなたもはてなブログをはじめてみませんか？<br/>
<br/>
はてなブログをはじめる（無料）<br/>
はてなブログとは<br/>
kitao's blog kitao's blog<br/>
Po<a href="we.htm">we</a>red by Hatena Blog | ブログを報告する<br/>
</p>
<p class='footer'>
 Page generated from <a href=".txt/pyxel">pyxel</a> by <a href=".src/lens.el">lens.el</a>.</p>
</body>
</html>
